(defwidget outer-window [] 
    (box
        (time :timetext "${time}"
        )
    )
)
(defwidget time [timetext]
    (button :onclick "dunstify -u critical '${timetext}'"
            :onmiddleclick ""
            :onmiddleclick ""
            :onrightclick ""
            :class "time"
            (box :spacing 0
                 :orientation "vertical"
                 :space-evenly false
                 (label :text timetext
                        :limit-width 5
                        :show_truncated false
                        :wrap false
                        :class "time-label"
                        :angle 0.0)
                )
        )
)

(defwidget profile [] 
    (box :orientation "v"
         :space-evenly "true"

        (box :class "pfp")
    )
)


(defwidget system-manager [] 
    (box :orientation "v" 
         :space-evenly "false" 

        (box :class "a" :orientation "h" :space-evenly "false"
            (label :class "title" :text "Stats")
        )

        (box :class "bars" :orientation "h" :space-evenly "false"
            (box :class "ram-bar" :tooltip "Used RAM"
                (scale :min 0 :max 101 :active "false" :value used_ram :orientation "v" :flipped "true"
            ))
            (box :class "disk-bar" :tooltip "Used Disk Space"
                (scale :min 0 :max 101 :active "false" :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)} :orientation "v" :flipped "true"
            ))
            (box :class "vol-bar" :tooltip "Volume"
                (scale :min 0 :max 101 :value volume :orientation "v" :flipped "true" :onchange "amixer -D pulse sset Master {}%"
            ))
            (box :class "bri-bar" :tooltip "Brightness"
                (scale :min 0 :max 101 :value brightness :orientation "v" :flipped "true" :onchange "brightnessctl set {}%"
            ))
        )
    )
)

(defwidget radialmeter [value text ?class ?labelclass]
    (circular-progress :value value
        :class "radial ${class}"
        :start-angle 0
        :thickness 10
        (label :text text
            :class "radial-label ${labelclass}"
            :limit-width 2
            :show_truncated false
            :wrap false
            :angle 0.0)))
            
            (defwidget battery[]
            (box  :spacing 0
                  :orientation "horizontal"
                  :space-evenly false
                  (box :spacing 0
                    :orientation "vertical"
                    :space-evenly false
                    :class "radial-main-box"
                    (label :class "title-bat" :text "Battery")
                       (radialmeter :value battery
                       :text ""
                       :labelclass "cpu-radial-label"
                       :class "cpu-radial"))))

(defwidget music-player [] 
    (box :class "music-player"
         :orientation "h"
        (box :class "song-art" :style "background-image: url('${art}')" :tooltip "${artist} - ${title}")
        (box :class "song-info" :orientation "v"
            (box :class "song-controls" :orientation "v"
                (button :onclick "~/.config/eww/sidebar/scripts/music previous" "")
                (button :class "play-pause" :onclick "~/.config/eww/sidebar/scripts/music toggle" playpause)
                (button :onclick "~/.config/eww/sidebar/scripts/music next" "")
            )
        )
    )
)
(defwidget music-info []
    (box :class "music-info" :orientation "v"
        (box :class "b" :orientation "h" :space-evenly "false"
            (label :class "song-title" :text title)
        )
        (box :class "c" :orientation "h" :space-evenly "false"
            (label :class "song-artist" :text "by ${artist}")
        )
    )
)
(defwidget weather [] 
    (box :orientation "v" :class "weather" :space-evenly "false" 
    (box :class "weather-stat" weather-stat)
    (box :class "temperature" "${temperature}")
    (box :class "weather-info" :orientation "v" :space-evenly "false" 
    (box :class "weather-icon" :style "color: ${weather-hex}" weather-icon)
        )
    )
)
(defwidget date []
    (box :class "date" :orientation "v" :space-evenly "false"
        (box :orientation "h" :space-evenly "false"
            (label :class "weekday" :text "${weekday}")
        )
        (label :class "monthday" :text "${monthday}")
    )
)
(defwidget quote []
    (box :class "quote" :orientation "v"
        (label :class "text" :text '"${quote}"')
        (label :class "author" :text "━ ${quote_author}")
    )
)
(defwidget cal []
    (box :class "cal-box" :orientation "v"
        (box :class "cal-inner-box"
            (calendar :class "cal" :day calendar_day :month calendar_month :year calendar_year)
        )
    )
)
